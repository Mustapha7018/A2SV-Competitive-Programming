class Solution:
    def shiftingLetters(self, s: str, shifts: List[int]) -> str:
        presum = [0] * len(shifts)
        presum[len(shifts)-1] = shifts[len(shifts)-1]
        l = 0
        r = len(shifts)
        output = []
        result = ""
        final = []

        for i in range(len(shifts)-2, -1, -1):
            presum[i] = presum[i+1] + shifts[i]      

        for i in range(len(shifts)):
            result += chr((ord(s[i]) - ord("a") + presum[i]) % 26 + 97)
        
        return result
        

        
        # for i in range(len(shifts)-2, -1, -1):
        #     presum[i] = presum[i+1] + shifts[i]      

        # for i in s:
        #     output.append(ord(i))
        
        # for i in range(len(presum)):
        #     result.append(presum[i] + output[i])

        # for i in result:
        #     final.append(chr(i))

        # return "".join(map(str, final))
       

        

