class Solution:
    def matrixBlockSum(self, mat: List[List[int]], k: int) -> List[List[int]]:
        m, n = len(mat), len(mat[0])
        prefix_sum = [[0]*(n+1) for _ in range(m+1)]
        answer = [[0]*n for _ in range(m)]
        
        for i in range(m):
            for j in range(n):
                prefix_sum[i+1][j+1] = prefix_sum[i][j+1] + prefix_sum[i+1][j] - prefix_sum[i][j] + mat[i][j]

        for i in range(m):
            for j in range(n):
                r1, c1, r2, c2 = max(0, i-k), max(0, j-k), min(m, i+k+1), min(n, j+k+1)
                answer[i][j] = prefix_sum[r2][c2] - prefix_sum[r1][c2] - prefix_sum[r2][c1] + prefix_sum[r1][c1]

        return answer
