class Solution:
    def canBeIncreasing(self, nums: List[int]) -> bool:

        idx, count, n = -1, 0, len(nums)

        for i in range(1, n):
            if nums[i - 1] < nums[i]:
                continue
            else:
                idx = i - 1
                count += 1

        if count == 0:
            return True
        
        if count == 1:
            if idx == 0 or idx == n-2:
                return True

            if nums[idx - 1] < nums[idx + 1] or (idx + 2 < n and nums[idx] < nums[idx + 2]):
                return True

        return False
        
'''
* if count == 0: means the arr is strictly increasing

* if count == 1: means we can definitely remove exactly one element for the arr to strictly increase. we have 3 cases here:
    - arr = [3,2,10,13] --> Here we have to remove idx 1 to make it strictly increasing
    - arr = [1,2,10,5,7] --> idx 2 has to be removed to make it strictly increasing
    - arr = [1,2,1,3,4] --> idx 2 has to be removed to make it strictly increasing


* we simply return False if count exceeds 1 because there will be more than one removal to make the arr strictly increasing

'''


        


        

        
