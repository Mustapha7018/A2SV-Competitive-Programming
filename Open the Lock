class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:

        if '0000' in deadends:
            return -1

        queue = deque()
        queue.append(('0000', 0))
        visited = set('0000')
        deads = set(deadends)

        while queue:
           curr, turns = queue.popleft()

           if curr == target:
               return turns

           for i in range(4):
               up = curr[:i] + str((int(curr[i]) + 1) % 10) + curr[i+1: ]
               down = curr[:i] + str((int(curr[i]) - 1) % 10) + curr[i+1: ]

               if up not in deads and up not in visited:
                   visited.add(up)
                   queue.append((up, turns+1))
               
               if down not in deads and down not in visited:
                   visited.add(down)
                   queue.append((down, turns+1))

        return -1

        
