class Solution:
    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:  

        graph = defaultdict(list)
        hashmap = {}
        queue = deque()
        top_sort = []
        
        graph = defaultdict(list)
        hashmap = {i: 0 for i in range(numCourses)}

        for k, v in prerequisites:
            graph[v].append(k)
            hashmap[k] += 1    

        for course in hashmap:
            if hashmap[course] == 0:
                queue.append(course)

        while queue:
            curr = queue.popleft()
            top_sort.append(curr)

            for neighbor in graph[curr]:
                hashmap[neighbor] -= 1
                if hashmap[neighbor] == 0:
                    queue.append(neighbor)


        return top_sort if len(top_sort) == numCourses else []


            









        
