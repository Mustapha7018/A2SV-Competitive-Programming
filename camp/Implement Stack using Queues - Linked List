# LINKED LIST IMPLEMENTATION
class Node:

    def __init__(self, val=None):
        self.val = val
        self.next = None

class MyStack:

    def __init__(self):
        self.head = None

    def push(self, val: int) -> None:
        if not self.head:
            self.head = Node(val)
        else:
            curr = self.head
            self.head = Node(val)
            self.head.next = curr

            #create new node and swap with head
            # new_node = Node(val)
            # new_node.next = self.head
            # self.head = new_node


    def pop(self) -> int:
        if not self.head:
            return -1
        else:
            temp = self.head
            self.head = temp.next
            return temp.val


    def top(self) -> int:
        if not self.head:
            return
        
        return self.head.val

    def empty(self) -> bool:
        if not self.head:
            return True
        else:
            return False
