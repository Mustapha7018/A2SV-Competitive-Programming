# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:

        if not head:
            return

        dummy = ListNode(0, head)
        dummy.next = head
        prev = dummy

        for _ in range(left - 1):
            prev = prev.next

        curr = prev.next
        nex = None

        tem = prev
        new = curr

        for _ in range(right - left + 1):
            nex = curr.next
            curr.next = prev
            prev = curr
            curr = nex
            
        tem.next = prev
        new.next = curr
        return dummy.next

        
                



                
        
