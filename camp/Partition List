# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:

        left, right = ListNode(), ListNode()
        l, r = left, right

        while head:
            # assign all vals less that x to the left, else assign them to the right
            if head.val < x:
                l.next = head
                l = l.next
            else:
                r.next = head
                r = r.next
        
            head = head.next
        r.next = None
        l.next = right.next
        
        return left.next



        # 2/168 test cases
        # nums = []
        # output = []
        # while head:
        #     nums.append(head.val)
        #     head = head.next

        # for i in nums:
        #     if i < x:
        #         output.append(i)

        # for i in nums:
        #     if i not in output:
        #         output.append(i)
        
        # head = ListNode(output[0])
        # current = head
        # for i in range(1, len(output)):
        #     new_node = ListNode(output[i])
        #     current.next=new_node
        #     current=current.next
        # return head





        
