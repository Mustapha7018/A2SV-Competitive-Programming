class Node:
    def __init__(self, val=None):
        self.val = val
        self.next = None

class MinStack:

    def __init__(self):
        self.head = None
        

    def push(self, val: int) -> None:
        new_node = Node(val)
        new_node.next = self.head
        self.head = new_node
        

    def pop(self) -> None:
        temp = self.head
        self.head = temp.next
        return temp.val
        

    def top(self) -> int:
        if self.head:
            return self.head.val
        return -1
        
        

    def getMin(self) -> int:
        curr = self.head
        nums = []
        while curr:
            nums.append(curr.val)
            curr = curr.next
        return min(nums)
            
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
