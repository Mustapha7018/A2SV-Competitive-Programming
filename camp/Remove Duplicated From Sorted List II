# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:

        # Check occurrences
        count_map = {}
        curr = head
        while curr:
            if curr.val in count_map:
                count_map[curr.val] += 1
            else:
                count_map[curr.val] = 1
            curr = curr.next

        #remove duplicates
        curr = head
        dummy = ListNode(0)
        dummy.next = curr
        prev = dummy

        while curr:
            if count_map[curr.val] > 1:
                prev.next = curr.next
            else:
                prev = curr
            curr = curr.next
        
        return dummy.next






    
        
        
